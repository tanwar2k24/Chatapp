<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not remove this line. File tag: mqtt.cool_edition-2.1.0. -->

<mqttcool_edition>

<!-- The elements below are used by MQTT.Cool to setup its own
     configuration. Elements with an empty or blank value are ignored and
     considered as not defined at all. Elements described as "cumulative"
     can be inserted multiple times in the same place. Note that element
     and attribute names are handled in a case insensitive way.
     A very simple variable-expansion feature is available. See the comment
     at the end of this file for full details. -->

<!--
  =================================
  EDITION AND LICENSE CONFIGURATION
  =================================
-->

   <!-- Configure the edition that should be used to run MQTT.Cool. -->
   <license>

      <!-- #########################################
           CONFIGURE YOUR MQTT.Cool EDITION HERE
           #########################################
           MQTT.Cool edition to use.
           Can be one of the following:
           - COMMUNITY: The server is fully featured, has no time bomb, but does not
              support clustering. Can be used for any purpose, even for production.
              Does not require to configure a license.
           - ENTERPRISE: An online license or a license file are required.
              Contact info@mqtt.cool for more information. -->
      <edition>COMMUNITY</edition>

      <!-- ###############################
           IF YOU CHOSE ENTERPRISE EDITION
           ############################### -->
      <enterprise_edition_details>

         <!-- Identifier of the contract in place. -->
         <contract_id></contract_id>

         <!-- Choose between online (cloud-based) and file-based license validation.
              Can be one of the following:
              - ONLINE
                The host names below must be reachable on port 443:
                - https://clm1.lightstreamer.com/
                - https://clm2.lightstreamer.com/
              - FILE
         -->
         <license_validation>ONLINE</license_validation>

         <!-- Used only if <license_validation> above set to ONLINE.
              Password used for validation of online licenses.
              Leave blank if <license_validation> set to FILE. -->
         <online_password></online_password>

         <!-- Used only if <license_validation> above set to FILE.
              Cumulative. Path and name of the license file, relative to the conf
              directory. If multiple occurrences of this element are supplied,
              the files are all evaluated and the first acceptable one is considered.
              Example: mylicensefile.lic -->
         <file_path></file_path>

      </enterprise_edition_details>

      <!-- Audit logs are produced for Per-User Licenses only.
           See the README.TXT file in the audit directory for full details. -->
      <audit_logs>

         <!-- Path of the directory in which to store the audit log files,
              relative to the conf directory.
              The main audit log reports statistics on the number of concurrent
              sessions and is produced for some types of licenses only. -->
         <path>../audit</path>

         <!-- In case of file-based license validation, this element allows to
              activate periodic automatic upload. This makes it much easier for
              the systems admins to deliver the logs, as contractually agreed.
              In case of online license validation, the audit logs are always
              automatically uploaded to the Online License Manager, irrespective
              of this element.
              Can be one of the following:
              - Y: Perform periodic automatic audit log upload.
                   The following host name must be reachable on port 443:
                   - https://service.lightstreamer.com/
              - N: Do not perform automatic audit log upload; if audit logs are
                   required by license terms, they must be delivered manually. -->
         <automatic_upload>Y</automatic_upload>

      </audit_logs>

      <!-- Periodically check whether any MQTT.Cool update is
           available. In such case, a notification is written to the log file.
           Can be one of the following:
           - Y: Perform automatic update check.
                The following host name must be reachable on port 443
                - https://service.lightstreamer.com/
           - N: Do not perform automatic update check. -->
      <automatic_update_check>Y</automatic_update_check>

   </license>

<!--
  ===================
  PROXY CONFIGURATION
  ===================
-->

   <!-- Configure a proxy server for outbound Internet access, if necessary.
        Internet access is needed, depending on the above configuration,
        to reach the Online License Manager, to upload audit logs,
        and to check for software updates.
        The host names below must be reachable from the proxy on port 443:
        - https://clm1.lightstreamer.com/    (depending on the configuration)
        - https://clm2.lightstreamer.com/    (depending on the configuration)
        - https://service.lightstreamer.com/ (regardless of the configuration)
        Several methods are provided for the proxy configuration, including
        PAC files, auto-discovery, and direct HTTP and SOCKS configuration. -->
   <proxy>

      <!-- Cumulative. HTTP Proxy Server configuration.
           If multiple occurrences of <http_proxy> are supplied, the proxies
           are all checked and the first acceptable one is used.
           If any <socks_proxy> element is configured too, it is checked
           in parallel with the <http_proxy> elements. -->
      <http_proxy>

         <!-- Hostname or IP address of the proxy server.
              Example: proxy.mycompany.com
              Example: 192.168.0.5 -->
         <proxy_host></proxy_host>

         <!-- Port number of the proxy server.
              Example: 8080 -->
         <proxy_port></proxy_port>

         <!-- Scheme "http" or "https" -->
         <proxy_scheme></proxy_scheme>

         <!-- User name if proxy authentication is required. -->
         <proxy_user></proxy_user>

         <!-- User password if proxy authentication is required. -->
         <proxy_password></proxy_password>

      </http_proxy>

      <!-- Cumulative. SOCKS Proxy Server configuration.
           If multiple occurrences of <socks_proxy> are supplied, the servers
           are all checked and the first acceptable one is used.
           If any <http_proxy> element is configured too, it is checked
           in parallel with the <socks_proxy> elements. -->
      <socks_proxy>

         <!-- Host name or IP address of the SOCKS server.
              Example: socks.mycompany.com
              Example: 192.168.0.9 -->
         <proxy_host></proxy_host>

         <!-- Port number of the SOCKS server.
              Example: 1080 -->
         <proxy_port></proxy_port>

         <!-- Protocol version to use.
              Can be one of the following:
              - SOCKS4
              - SOCKS4a
              - SOCKS5 -->
         <proxy_version></proxy_version>

         <!-- User name if proxy authentication is required. -->
         <proxy_user></proxy_user>

         <!-- User password if proxy authentication is required. -->
         <proxy_password></proxy_password>

      </socks_proxy>

      <!-- Configure one or multiple proxy auto-config (PAC) files, for simpler
           proxy configuration. -->
      <pac_files>

         <!-- Cumulative. URL of the PAC file.
              Example: http://intra.mycompany.com/company.pac -->
         <file_url></file_url>

         <!-- Cumulative. Path of the PAC file, in case it is stored on the file system.
              Example: C:\mypath\myfile.pac -->
         <file_path></file_path>

      </pac_files>

      <!-- In case no proxy configuration is provided or the provided
           configuration does not work, automatic proxy discovery is
           attempted (via system environment check and WPAD).
           Can be one of the following:
           - Y: perform auto-discovery;
           - N: do not perform auto-discovery. -->
      <proxy_autodiscovery>N</proxy_autodiscovery>

      <!-- Specifies a NIC to use to access the external services, with or
           without a proxy.
           Example: 200.0.0.1 -->
      <network_interface></network_interface>

   </proxy>

    <!-- Optional. If set and not empty, modifies the behavior of the
         variable-expansion feature in this configuration file (see below). -->
    <env_prefix></env_prefix>

</mqttcool_edition>

<!-- A very simple variable-expansion feature is available for this file.
     Element or attribute values of the form $propname are expanded by looking for
     a corresponding JVM property (which, for instance, can be defined by adding
     -Dpropname=propvalue to the Server command line arguments in the launch
     script). If the property is not defined, then the element or attribute
     is considered as not defined at all.
     If <env_prefix> is set, it specifies a prefix such that, if a $propname
     value is found and propname starts with this prefix, the propname will
     be searched among the system environment variables rather than the JVM
     properties.
     If needed, the variable-expansion feature can be disabled for an element
     or for an element's attribute (let's say: attr) by adding prop_prefix=""
     or, respectively, attr_prop_prefix="" to the element (note that these
     "prop_prefix" attributes are handled in a special way). This also allows
     for setting a prefix other than "$".

     All the element or attribute values described as directory or file paths
     can be expressed as absolute or relative pathnames; when relative,
     they are considered as relative to the directory that contains this
     configuration file.
     Note that, on Windows, if a drive name is not specified, a double initial
     slash or backslash is needed to make a path absolute. -->
